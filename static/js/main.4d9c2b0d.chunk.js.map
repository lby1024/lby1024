{"version":3,"sources":["components/loading/index.tsx","hooks/use-title.ts","tools/alert.ts","tools/api.ts","tools/localstorage.ts","tools/react-query.ts","tools/request.ts","tools/user.ts","components/select/use-select.ts","components/select/user-select.tsx","hooks/use-debounce.ts","tools/utils.ts","hooks/use-params.ts","tools/list-config.ts","tools/project.ts","pages/projects/search.tsx","pages/projects/project-more.tsx","pages/projects/save.tsx","pages/projects/table.tsx","pages/projects/index.tsx","components/row/index.tsx","pages/kanban/utils.ts","pages/epic/index.tsx","pages/epic/utils.ts","pages/kanban/utils-task.ts","tools/task.ts","pages/kanban/utils-kanban.ts","pages/kanban/kanban-more.tsx","pages/kanban/task-add.tsx","assets/task.svg","assets/bug.svg","components/hight-light/index.tsx","pages/kanban/task-card.tsx","components/drop/index.tsx","components/drag/index.tsx","pages/kanban/kanban-column.tsx","pages/kanban/kanban-add.tsx","components/select/task-type-select.tsx","pages/kanban/search-task.tsx","pages/kanban/index.tsx","router/tasks-router/menu/index.tsx","router/tasks-router/index.tsx","webpack:///./src/assets/logo.svg?1e6d","router/projects-router/header/head-users.tsx","router/projects-router/header/head-projects.tsx","router/projects-router/header/index.tsx","router/projects-router/index.tsx","pages/login/login.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","pages/login/regist.tsx","pages/login/index.tsx","App.tsx","reportWebVitals.ts","components/project-form/index.tsx","components/task-form/index.tsx","pages/epic/epic-form.tsx","index.tsx"],"names":["XLoading","className","size","Content","styled","div","useTitle","title","defaultTitle","useRef","document","useEffect","current","AlertModel","projectForm","taskForm","epicForm","API","localStorageKey","queryKey","getToken","window","localStorage","getItem","token","saveToken","setItem","apiUrl","process","request","api","a","cfg","config","getConfig","method","toUpperCase","params","qs","data","body","JSON","stringify","fetch","res","resolveRes","headers","Authorization","status","logout","Promise","reject","message","json","ok","useHttp","userInfo","useQueryClient","getQueryData","register","user","login","removeItem","location","reload","getUserInfo","undefined","useUser","useQuery","useUsers","http","users","useSelect","options","defaultlabel","defaultValue","newOptions","useMemo","defaultOption","label","value","arr","map","name","id","XUserSelect","props","Select","useDebounce","delay","useState","debouncedValue","setDebouncedValue","prev","timer","setTimeout","clearTimeout","cleanObj","obj","Object","keys","forEach","key","v","useUrlParams","useSearchParams","searchParams","setSearchParams","reduce","pre","get","setParams","o","fromEntries","useQueryConfig","update","queryClient","onMutate","param","preData","newData","setQueryData","onSuccess","invalidateQueries","onError","err","preDate","useEditConfig","editList","useAddConfig","addList","useDeleteConfig","deleteList","list","newItem","item","Date","console","log","target","filter","useProjectsParam","personId","Number","useProjects","projects","useProject","project","enabled","useEditProject","useMutation","useAddProject","XSearch","layout","Item","type","placeholder","onChange","e","Form","XProjectMore","mutateAsync","useDeleteProject","MENU","onClick","Modal","confirm","content","onOk","overlay","arrow","XSaveProject","saveProject","pin","count","XTableProjects","isLoading","dataSource","Columns","dataIndex","render","to","find","time","dayjs","format","columns","pagination","loading","XProjects","justify","align","XRow","between","marginBottom","gap","useProjectIdInUrl","useLocation","pathname","match","moveIitem","from","index","splice","XEpic","epics","projectId","useEpics","deleteEpic","useDeleteEpic","style","overflow","height","itemLayout","renderItem","epic","Meta","okText","description","start","end","useTasksParam","processorId","typeId","tagId","reset","useTasksKey","p","tasks","useReorderTask","tasksKey","tasksReorder","preTasks","newTasks","taskIds","fromIndex","indexOf","fromId","toIndex","referenceId","kanbanId","toKanbanId","sortTask","useTasks","useKanbansKey","kanbans","useReorderKanban","kanbansKey","kanbansReorder","preKanbans","newKanbans","kanbanIds","sortKanban","XKanbanMore","kanban","mutate","useDeleteKanban","XAddTask","inputShow","setInputShow","setName","addTask","useAddTask","autoFocus","onBlur","onPressEnter","XHightLight","txt","keyword","split","length","color","XTaskCard","task","icon","bugIcon","taskIcon","src","alt","Card","isDraggingOver","hoverBg","bg","XDrop","children","provided","snapshot","innerRef","ref","XDrag","dragAll","React","isValidElement","dragHandleProps","draggableProps","cloneElement","defaultProps","XKanbanColumn","filterTasks","droppableId","String","direction","draggableId","XKanbanAdd","addKanban","useAddKanban","XTaskTypeSelect","taskTypes","useTaskTypes","XSearchTask","XKanban","useProjectInUrl","projectLoading","taskLoading","useKanbans","reorderKanban","reorderTask","onDragEnd","source","destination","reference","fromKanbanId","getTypeTask","XMenu","useRouteKey","mode","selectedKeys","Menu","Sider","Layout","XTaskRouter","XLayout","theme","path","element","replace","_extends","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","x1","y1","x2","y2","stopColor","offset","_ref3","stroke","strokeWidth","fillRule","d","fill","SvgLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","ForwardRef","XHeadUsers","refetch","CONTEENT","Text","onVisibleChange","XHeadProject","saves","CONTENT","XHeader","UserMenu","textAlign","placement","XProjectsRouter","XLogin","client","useLogin","onFinish","catch","rules","required","Password","htmlType","XRegist","useRegist","regist","cpassword","password","error","Error","PUnlogin","isRegist","setIsRegist","setError","footerInfo","logo","left","right","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","XProjectForm","useForm","form","visible","setVisible","setParam","close","resetFields","setFieldsValue","onClose","width","Drawer","labelCol","span","wrapperCol","XTaskForm","useEditTask","editTask","editLoading","useDeleteTask","deleteTask","deleteLoading","cancelText","confirmLoading","getFieldsValue","onCancel","XEpicForm","useAddEpic","addEpic","QueryClientProvider","QueryClient","loadServer","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4d9c2b0d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport { Spin } from \"antd\";\nimport { FC } from \"react\";\n\ninterface IXLoading {\n    className?: string;\n}\n\nconst XLoading: FC<IXLoading> = ({className}) => {\n    return <Content className={className} >\n        <Spin size=\"large\" />\n    </Content>\n}\n\nexport default XLoading\n\nconst Content = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import { useEffect, useRef } from \"react\";\n\nexport function useTitle(title: string) {\n    const defaultTitle = useRef(document.title)\n\n    useEffect(() => {\n        document.title = title\n    }, [title])\n\n    useEffect(() => () => {\n        document.title = defaultTitle.current\n    }, [])\n}","import { IEpic } from \"pages/epic/utils\"\nimport { IProject } from \"./project\"\nimport { ITask } from \"./task\"\n\nclass AlertModel {\n    static projectForm: (param?: Partial<IProject>) => void\n    static taskForm: (param?: Partial<ITask>) => void\n    static epicForm: (param?: Partial<IEpic>) => void\n    \n}\n\nexport default AlertModel","export enum API {\n    userInfo = 'me', // 获取用户信息\n    login = 'login', // 登录\n    register = 'register', // 注册    \n    projects = 'projects', // 项目列表\n    users = \"users\",    // 获取人员列表\n    kanbans = \"kanbans\", //\n    kanbansReorder = \"kanbans/reorder\",\n    tasks = \"tasks\", \n    taskTypes = \"taskTypes\",\n    tasksReorder = \"tasks/reorder\",\n    epics = \"epics\",\n}\n\nexport interface ILogin {\n    username: string;\n    password: string;\n}\n\nexport interface IRegist extends ILogin {}\n\nexport interface IGetTasks {\n    name: string,\n    processorId: number,\n    typeId: number,\n    tagId: number,\n    projectId: number,\n}\n/**\n * 排序看板\n * 排序task\n */\nexport interface ISort {\n    // 要重新排序的 item\n    fromId: number;\n    // 目标 item\n    referenceId: number;\n    // 放在目标item的前还是后\n    type: \"before\" | \"after\";\n    fromKanbanId?: number;\n    toKanbanId?: number;\n  }","export enum localStorageKey {\n    token = 'token'\n}\n\nexport function getToken() {\n    return window.localStorage.getItem(localStorageKey.token)\n}\n\nexport function saveToken(token: string) {\n    window.localStorage.setItem(localStorageKey.token, token || '')\n}\n","export enum queryKey {\n    userInfo = 'userInfo',\n    projects = \"projects\",\n    project = \"project\",\n    users = \"users\",\n    kanbans = \"kanbans\",\n    kanban = \"kanban\",\n    tasks = \"tasks\",\n    taskTypes = \"taskTypes\",\n    epics = \"epics\"\n}\n","import * as qs from 'qs'\nimport { useQueryClient } from 'react-query';\nimport { queryKey } from './react-query';\nimport { IUser, logout } from './user';\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface IConfig extends RequestInit {\n    token?: string\n    data?: object\n    method?: 'GET'|'POST'|'PUT'|'PATCH'|'DELETE'\n}\n\nexport async function request(api: string, cfg: IConfig = {} ) {\n    \n    const config = getConfig(cfg)\n    \n    if(config.method.toUpperCase() === 'GET') {\n        const params = qs.stringify(cfg.data)\n        if(params) api += `?${params}`\n    }else {\n        config.body = JSON.stringify(cfg.data || {})\n    }\n    \n    const res = await window.fetch(`${apiUrl}/${api}`, config)\n    return await resolveRes(res)\n}\n/**\n * req 的 config\n */\nfunction getConfig(cfg: IConfig) {\n    return {\n        method: 'GET',\n        headers: {\n            Authorization: cfg.token ? `Bearer ${cfg.token}` : ``,\n            'Content-Type': cfg.data ? 'application/json' : '',\n        },\n        ...cfg\n    }\n}\n/**\n * 处理response\n */\nasync function resolveRes(res: Response) {\n    if(res.status === 401) {\n        logout()\n        return Promise.reject({message: '请重新登陆'})\n    }\n    const data = await res.json()\n    if(res.ok) {\n        return data\n    } else {\n        return Promise.reject(data)\n    }\n}\n/**\n * 登录, 注册, 获取用户信息, 不使用\n */\nexport function useHttp() {\n    const queryClient = useQueryClient()\n    const userInfo = queryClient.getQueryData<IUser>(queryKey.userInfo)\n\n    return (api:string, cfg?: IConfig) => request(api, {\n        ...cfg,\n        token: userInfo?.token\n    })\n}","import { useMemo } from \"react\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { API, ILogin, IRegist } from \"./api\"\nimport { getToken, localStorageKey, saveToken } from \"./localstorage\"\nimport { queryKey } from \"./react-query\"\nimport { request, useHttp } from \"./request\"\n\nexport interface IUser {\n    id: number;\n    name: string;\n    email: string;\n    title: string;\n    organization: string;\n    token: string;\n}\n\nexport const register = async (data: IRegist) => {\n    const {user} = await request(API.register, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const login = async (data: ILogin) => {\n    const {user} = await request(API.login, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem(localStorageKey.token)\n    window.location.reload() // 重新加载页面\n}\n\nasync function getUserInfo() {\n    // 只有获取userInfo时才从localstorage中获取token\n    const token = getToken()\n    if(!token) return undefined\n    const res = await request(API.userInfo, {token})\n    return res.user\n}\n\nexport function useUser() {\n    return useQuery<IUser>(queryKey.userInfo, getUserInfo)\n}\n\nexport function useRegist() {\n    const client = useQueryClient()\n    return useMutation(register, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useLogin() {\n    const client = useQueryClient()\n    return useMutation(login, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useUsers() {\n    const http = useHttp()\n    async function getUsers() { \n        return await http(API.users)\n    }\n    return useQuery<IUser[]>(queryKey.users, getUsers)\n}\n","import { useMemo } from \"react\";\n\nexport function useSelect(options?: {name: string, id: number}[], defaultlabel=\"负责人\") {\n\n    const defaultValue = 0\n\n    const newOptions = useMemo(() => {\n        const defaultOption = {label: defaultlabel, value: defaultValue}\n        if(!options) return [defaultOption]\n        const arr = options?.map(user => ({\n            label: user.name,\n            value: user.id,\n        }))\n        return [ defaultOption, ...arr]\n    }, [options])\n\n    return {\n        options: newOptions,\n        defaultValue,\n    }\n}","import styled from \"@emotion/styled\";\nimport { Select } from \"antd\";\nimport { FC, useMemo } from \"react\";\nimport { useUsers } from \"tools/user\";\nimport { useSelect } from \"./use-select\";\n\ninterface IXUserSelect extends React.ComponentProps<typeof Select> {\n    \n}\n\nconst XUserSelect:FC<IXUserSelect> = (props) => {\n    const {data: users} = useUsers()\n\n    const {options, defaultValue} = useSelect(users)\n\n    return <Content \n        {...props}\n        value={props.value || defaultValue}\n        options={options} \n    />\n}\n\nexport default XUserSelect\n\nconst Content = styled(Select)`\n    .ant-select-selection-item {\n        text-align: left;\n    }\n`","import { useEffect, useRef, useState } from \"react\";\n\nexport const useDebounce = <V>(value: V, delay=300) => {\n    const [debouncedValue, setDebouncedValue] = useState(value)\n    const prev = useRef(value)\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setDebouncedValue(value)\n        }, delay)\n        return () => {\n            prev.current = value\n            clearTimeout(timer)\n        }\n    }, [value])\n\n    return debouncedValue\n}","/**\n * 是否为 null, undefined, \"\", 等\n */\n export const isFalsy = (value: unknown) => (value === 0 ? false : !value)\n /**\n  * {a: 0, b: null} --> {a: 0}\n  */\n export const cleanObj = (obj?: {[key: string]: unknown}) => {\n     if(!obj) {\n         return {};\n     }\n     const res = {...obj}\n     Object.keys(res).forEach(key => {\n         const v = res[key]\n         if(isFalsy(v)) {\n             delete res[key]\n         }\n     })\n     return res\n }\n\n export function debounce(callback: (data?: any) => void, delay=100) {\n    let timer: any = null\n     return function fn(...args: any[]) {\n        if(timer) clearTimeout(timer)\n        timer = setTimeout(() => {\n            callback(args)\n        }, delay);\n     }\n }\n ","import { useMemo } from \"react\"\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\"\nimport { cleanObj } from \"tools/utils\"\n\nexport function useUrlParams<K extends string>(keys: K[]) {\n        \n    const [searchParams, setSearchParams] = useSearchParams()\n\n    const params = useMemo(() => {\n        return keys.reduce((pre, key) => ({\n            ...pre,\n            [key]: searchParams.get(key)\n        }), {} as {[x in K]: string})\n    }, [searchParams])\n\n    const setParams = (obj: Partial<{[x in K]: any}>) => {\n        let o = cleanObj({\n            ...Object.fromEntries(searchParams),\n            ...obj,\n        }) as URLSearchParamsInit\n        setSearchParams(o)\n    }\n\n    return {params, setParams}\n}\n","import { QueryKey, useQueryClient } from \"react-query\"\n\ntype fnUpdate = (list: any[], item: any) => any[]\n\nfunction useQueryConfig(key: QueryKey, update: fnUpdate) {\n    const queryClient = useQueryClient()\n    return {\n        async onMutate(param: any) {\n            const preData = queryClient.getQueryData(key) as any[]\n            const newData = update(preData, param)\n            queryClient.setQueryData(key, newData)\n            return preData\n        },\n        onSuccess() {\n            queryClient.invalidateQueries(key)\n        },\n        onError(err: Error, param: any, preDate: any) {\n            queryClient.setQueryData(key, preDate)\n        }\n    }\n}\n\nexport function useEditConfig(key: QueryKey) {\n    return useQueryConfig(key, editList)\n}\n\nexport function useAddConfig(key: QueryKey) {\n    return useQueryConfig(key, addList)\n}\n\nexport function useDeleteConfig(key: QueryKey) {\n    return useQueryConfig(key, deleteList)\n}\n\nfunction editList(list: any[], newItem: any) {\n    list = list.map(item => {\n        if(item.id === newItem.id) return {\n            ...item,\n            ...newItem\n        }\n        return item\n    })\n    return [...list]\n}\n\nfunction addList(list: any[], item: any) {\n    list = list || []\n    const newItem = {...item}\n    newItem.id = newItem.id || +new Date()\n    console.log([...list, newItem], '--- kkk');\n    \n    return [...list, newItem]\n}\n\nfunction deleteList(list: any[], target: any) {\n    list = list.filter(item => item.id !== target.id)\n    return [...list]\n}","import { useDebounce } from \"hooks/use-debounce\"\nimport { useUrlParams } from \"hooks/use-params\"\nimport { useMemo } from \"react\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { API } from \"./api\"\nimport { useAddConfig, useDeleteConfig, useEditConfig } from \"./list-config\"\nimport { queryKey } from \"./react-query\"\nimport { useHttp } from \"./request\"\n\nexport interface IProject {\n    id: number;\n    name: string;\n    personId: number;\n    pin: boolean;\n    organization: string;\n    created: string;    \n}\n/**\n * \n */\nexport function useProjectsParam() {\n    const { params, setParams } = useUrlParams([\"name\", \"personId\"])\n    const newParam = useMemo(() => ({\n        ...params,\n        personId: Number(params.personId) || undefined\n    }), [params])\n    \n    return {\n        params: newParam,\n        setParams\n    }\n}\n/**\n * \n */\nexport const useProjects = () => {\n    const http = useHttp()\n    const { params } = useProjectsParam()\n    const data = useDebounce(params)\n\n    async function getProjects() {\n        const res = await http(API.projects, { data })\n        return res\n    }\n\n    return useQuery<IProject[]>([queryKey.projects, data], getProjects)\n}\n/**\n * 获取项目详情\n */\nexport const useProject = (id?: number) => {\n    const http = useHttp()\n\n    async function getProject() {\n        return await http(`${API.projects}/${id}`)\n    }\n    return useQuery<IProject>([queryKey.project, {id}], getProject, {\n        enabled: !!id,\n    })\n}\n/**\n * 编辑project\n */\nexport const useEditProject = () => {\n    const { params } = useProjectsParam()\n    const key = [queryKey.projects, params]\n    const http = useHttp()\n\n    async function editProject(project: Partial<IProject>) {\n        return await http(`${API.projects}/${project.id}`, {\n            method: \"PATCH\",\n            data: project,\n        })\n    }\n    return useMutation(editProject, useEditConfig(key))\n}\n/**\n * 添加project\n */\nexport function useAddProject() {\n    const { params } = useProjectsParam()\n    const key = [queryKey.projects, params]\n    const http = useHttp()\n\n    async function addProject(params: Partial<IProject>) {\n        return await http(API.projects, {\n            method: \"POST\",\n            data: params\n        })\n    }\n    return useMutation(addProject, useAddConfig(key))\n}\n/**\n * 删除project\n */\nexport function useDeleteProject() {\n    const { params } = useProjectsParam()\n    const key = [queryKey.projects, params]\n    const http = useHttp()\n\n    async function deleteProject(params: Partial<IProject>) {\n        return await http(`${API.projects}/${params.id}`, {\n            method: \"DELETE\"\n        })\n    }\n    return useMutation(deleteProject, useDeleteConfig(key))\n}\n","import styled from \"@emotion/styled\";\nimport { Form, Input } from \"antd\";\nimport XUserSelect from \"components/select/user-select\";\nimport React, { FC } from \"react\";\nimport { useProjectsParam } from \"tools/project\";\n\nconst XSearch:FC = () => {\n\n    const { params, setParams } = useProjectsParam()\n\n    const onName = (name: string) => {\n        setParams({\n            ...params,\n            name\n        })        \n    }\n\n    function onPersonId(personId: any) {\n        setParams({\n            ...params,\n            personId: personId || undefined\n        })\n    }\n\n    return <Content layout=\"inline\" >\n        <Form.Item>\n            <Input type=\"text\" placeholder=\"项目名\" value={params.name} onChange={e => onName(e.target.value)} />\n        </Form.Item>\n\n        <Form.Item>\n            <XUserSelect value={params.personId} onChange={onPersonId} />\n        </Form.Item>\n    </Content>\n}\n\nexport default XSearch\n\nconst  Content = styled(Form)`\n    margin-bottom: 2rem\n`","import { Button, Dropdown, Menu, Modal } from \"antd\";\nimport { FC } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport { IProject, useDeleteProject } from \"tools/project\";\n\ninterface IXProjectMore {\n    project: IProject\n}\n\nexport const XProjectMore:FC<IXProjectMore> = ({project}) => {\n\n    const { mutateAsync } = useDeleteProject()\n\n    function edit() {\n        AlertModel.projectForm(project)\n    }\n\n    function deleteProject() {\n        Modal.confirm({\n            content: '确定要删除吗?',\n            onOk() {\n                mutateAsync(project)\n            }\n        })\n    }\n\n    const MENU = <Menu>\n        <Menu.Item onClick={edit}>编辑</Menu.Item>\n        <Menu.Item onClick={deleteProject} >删除</Menu.Item>\n    </Menu>\n\n    return <Dropdown overlay={MENU} arrow >\n        <Button type=\"link\" >...</Button>\n    </Dropdown>\n}\n\nexport default XProjectMore","import { Rate } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport { IProject, useEditProject } from \"tools/project\";\n\ninterface IXSaveProject {\n    project: Partial<IProject>\n}\n\nconst XSaveProject:FC<IXSaveProject> = ({project}) => {\n\n    const { mutateAsync: saveProject } = useEditProject()\n\n    const value = useMemo(() => {\n        return project.pin ? 1 : 0\n    }, [project.pin])\n\n    function onTap(v: number) {\n        saveProject({\n            id: project.id,\n            pin: !!v\n        })\n    }\n\n    return <Rate value={value} count={1} onChange={onTap} />\n}\n\nexport default XSaveProject","import { render } from \"@testing-library/react\";\nimport { Spin, Table } from \"antd\";\nimport { ColumnsType } from \"antd/lib/table\";\nimport dayjs from \"dayjs\";\nimport React, { FC, useEffect, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IProject, useProjects } from \"tools/project\";\nimport { useUsers } from \"tools/user\";\nimport XProjectMore from \"./project-more\";\nimport XSaveProject from \"./save\";\n\nconst XTableProjects:FC = () => {\n\n    const { data: projects, isLoading } = useProjects()\n    const { data: users } = useUsers()\n\n    const dataSource = useMemo(() => {\n        if(!projects) return []\n        return projects.map(item => ({\n            ...item,\n            key: item.id\n        }))\n    }, [projects])\n\n    const Columns: ColumnsType<any> = [\n        {\n            title: <XSaveProject project={{pin: true}} />,\n            dataIndex: \"pin\",\n            key: \"pin\",\n            render(value, project) {\n                return <XSaveProject project={project} />\n            }\n        },{\n            title: \"项目名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            render(value, project) {\n                return <Link to={`/projects/${Number(project.id)}`} >{value}</Link>\n            }\n        },{\n            title: \"部门\",\n            dataIndex: \"organization\",\n            key: \"organization\",\n        },{\n            title: \"负责人\",\n            dataIndex: \"administrator\",\n            key: \"administrator\",\n            render(value, project: IProject) {\n                const user = users?.find(user => user.id === project.personId)\n                return user?.name || '未知'\n            }\n        },{\n            title: \"创建时间\",\n            dataIndex: \"created\",\n            key: \"created\",\n            render(value) {\n                const time = value || new Date()\n                return dayjs(time).format(\"YYYY-MM-DD\")\n            }\n        },{\n            title: \"编辑\",\n            dataIndex: \"edit\",\n            key: \"edit\",\n            render(value, project) {\n                return <XProjectMore project={project} />\n            }\n        }\n    ]\n\n    return <Table columns={Columns} dataSource={dataSource} pagination={false} loading={isLoading} />\n}\n\nexport default XTableProjects","import styled from \"@emotion/styled\";\nimport { Button, Row } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport { FC, useEffect } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport XSearch from \"./search\";\nimport XTableProjects from \"./table\";\n\nconst XProjects: FC = () => {\n\n    useTitle(\"项目列表\")\n\n    return <Content>\n        <Row justify=\"space-between\" align=\"middle\" className=\"raw\" >\n            <h1>项目列表</h1>\n            <Button type=\"link\" onClick={() => AlertModel.projectForm()} >创建项目</Button>\n        </Row>\n        <XSearch />\n        <XTableProjects />\n    </Content>\n}\n\nexport default XProjects\n\nconst Content = styled.div`\n    padding: 3.2rem;\n    .raw {\n        margin-bottom: 2rem;\n    }\n`","import styled from \"@emotion/styled\";\n\nexport const XRow = styled.div<{\n    gap?: number | boolean;\n    between?: boolean;\n    marginBottom?: number;\n}>`\n    display: flex;\n    align-items: center;\n    justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n    margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n  \n    > * {\n      margin-top: 0 !important;\n      margin-bottom: 0 !important;\n      margin-right: ${(props) =>\n        typeof props.gap === \"number\"\n            ? props.gap + \"rem\"\n            : props.gap\n                ? \"2rem\"\n                : undefined};\n    }\n  `;","import { useLocation } from \"react-router\"\n\n/**\n * 获取路由中的projectId\n */\n export function useProjectIdInUrl() {\n    const {pathname} = useLocation()\n    const id = pathname.match(/projects\\/(\\d+)/)?.[1]\n    return Number(id)\n}\n\nexport function  moveIitem(arr: any[], from: number, to: number, type: \"after\"|\"before\") {\n    to = to || 0\n    arr = [...arr]\n    const target = arr[from]\n    arr[from] = null\n    const index = type === \"after\" ? to+1 : to\n    arr.splice(index, 0, target)\n    arr = arr.filter(item => item)\n    return arr\n}","import styled from \"@emotion/styled\";\nimport { Button, List, Modal } from \"antd\";\nimport { XRow } from \"components/row\";\nimport dayjs from \"dayjs\";\nimport { useProjectIdInUrl } from \"pages/kanban/utils\";\nimport { FC } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport { useProject } from \"tools/project\";\nimport { IEpic, useDeleteEpic, useEpics } from \"./utils\";\n\nconst XEpic:FC = () => {\n\n    const { data: epics } = useEpics()\n    const { mutateAsync: deleteEpic } = useDeleteEpic()\n    const { data: project } = useProject(useProjectIdInUrl())\n\n    function del(param: IEpic) {\n        Modal.confirm({\n            title: `确定删除项目:${param.name}`,\n            content: \"点击确定删除\",\n            okText: \"确定\",\n            onOk() {\n                deleteEpic(param)\n            }\n        })\n    }\n    \n    return <Content>\n        <XRow between={true} >\n            <h1>{project?.name}任务组</h1>\n            <Button type=\"link\" onClick={() => AlertModel.epicForm()} >创建任务组</Button>\n        </XRow>\n        <List  \n            style={{overflow: \"auto\", height: \"81vh\"}}\n            itemLayout=\"vertical\"\n            dataSource={epics}\n            renderItem={epic => <List.Item>\n                <List.Item.Meta \n                    title={<XRow between={true} >\n                        <span>{epic.name}</span>\n                        <Button type=\"link\" onClick={() => del(epic)} >删除</Button>\n                    </XRow>}\n                    description={\n                        <div>\n                            <div>开始时间: {dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\n                            <div>结束时间: {dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\n                        </div>\n                    }\n                />\n            </List.Item>}\n        />\n    </Content>\n}\n\nexport default XEpic\n\nconst Content = styled.div`\n    padding: 2rem;\n`","import { useProjectIdInUrl } from \"pages/kanban/utils\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { API } from \"tools/api\";\nimport { useAddConfig, useDeleteConfig } from \"tools/list-config\";\nimport { queryKey } from \"tools/react-query\";\nimport { useHttp } from \"tools/request\";\n\nexport interface IEpic {\n    id: number;\n    name: string;\n    projectId: number;\n    start: number;  // 开始时间\n    end: number;    // 结束时间\n}\n\nexport function useEpics() {\n    const http = useHttp()\n    const projectId = useProjectIdInUrl()\n    const param = {projectId}\n    return useQuery<IEpic[]>([queryKey.epics, param], async () => {\n        return await http(API.epics, {data: param})\n    })\n}\n\nexport function useAddEpic() {\n    const http = useHttp()\n    const projectId = useProjectIdInUrl()\n    const param = {projectId}\n    const key = [queryKey.epics, param]\n    async function addEpic(param: Partial<IEpic>) {\n        return await http(API.epics, {\n            method: \"POST\",\n            data: param\n        })\n    }\n    return useMutation(addEpic, useAddConfig(key))\n}\n\nexport function useDeleteEpic() {\n    const http = useHttp()\n    const projectId = useProjectIdInUrl()\n    const param = {projectId}\n    const key = [queryKey.epics, param]\n    async function deleteEpic(param: Partial<IEpic>) {\n        return await http(`${API.epics}/${param.id}`, {\n            method: \"DELETE\"\n        })\n    }\n    return useMutation(deleteEpic, useDeleteConfig(key))\n}","import { useDebounce } from \"hooks/use-debounce\"\nimport { useUrlParams } from \"hooks/use-params\"\nimport { useMemo } from \"react\"\nimport { useMutation, useQueryClient } from \"react-query\"\nimport { API, ISort } from \"tools/api\"\nimport { queryKey } from \"tools/react-query\"\nimport { useHttp } from \"tools/request\"\nimport { ITask } from \"tools/task\"\nimport { cleanObj } from \"tools/utils\"\nimport { moveIitem, useProjectIdInUrl } from \"./utils\"\n\nexport function useTasksParam() {\n    const {params, setParams} = useUrlParams([\"name\", \"processorId\", \"typeId\", \"tagId\"])\n    const projectId = useProjectIdInUrl()\n\n    const data = useMemo(() => {\n        return {\n            ...params,\n            projectId,\n            processorId: Number(params.processorId) || undefined,\n            typeId: Number(params.typeId) || undefined,\n            tagId: Number(params.tagId) || undefined,\n        }\n    }, [params, projectId])\n\n    function reset() {\n        setParams({\n            name: undefined,\n            processorId: undefined,\n            typeId: undefined,\n            tagId: undefined,\n        })\n    }\n\n    return {\n        params: data,\n        setParams,\n        reset,\n    }\n}\n\nexport function useTasksKey() {\n    const {params} = useTasksParam()\n    const p = useDebounce(params)\n\n    const key = useMemo(() => {\n        return [queryKey.tasks, cleanObj(params)]\n    }, [p])\n\n    return key\n}\n\nexport function useReorderTask() {\n    const http = useHttp()\n    const tasksKey = useTasksKey()\n    const queryClient = useQueryClient()\n    async function reorderTask(params:ISort) {\n        const res = await http(API.tasksReorder, {\n            data: params,\n            method: \"POST\"\n        })\n        return res\n    }\n    return useMutation(reorderTask, {\n        onMutate(params: ISort) {\n            const preTasks = queryClient.getQueryData(tasksKey) as ITask[]\n            const newTasks = sortTask(preTasks, params)\n            queryClient.setQueryData(tasksKey, newTasks)\n            return preTasks\n        },\n        // onSuccess() {\n        //     queryClient.invalidateQueries(tasksKey)\n        // },\n        onError(err: Error, param: any, preDate: any) {\n            queryClient.setQueryData(tasksKey, preDate)\n        }\n    })\n}\n\nfunction sortTask(tasks: ITask[], params: ISort) {\n    tasks = [...tasks]\n    const taskIds = tasks.map(item => item.id)\n    const fromIndex = taskIds.indexOf(params.fromId)\n    const toIndex = taskIds.indexOf(params.referenceId)\n    tasks[fromIndex].kanbanId = Number(params.toKanbanId)\n    return moveIitem(tasks, fromIndex, toIndex, params.type)\n}\n/**\n * \n */\ntype AfterBefor = \"after\" | 'before'\ninterface IGetTypeTask {\n    arr: any[];\n    fromIndex: number;\n    toIndex: number;\n    fromKanbanId: number;\n    toKanbanId: number;\n}\nexport function  getTypeTask( param: IGetTypeTask ): AfterBefor {\n    const { arr, fromKanbanId, fromIndex, toKanbanId, toIndex } = param\n    if(fromKanbanId === toKanbanId) {\n        return fromIndex < toIndex ? \"after\" : \"before\"\n    }\n    if(arr[toIndex]) {\n        return \"before\"\n    }\n    return \"after\"\n}","import { useTasksKey } from \"pages/kanban/utils-task\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { API, IGetTasks } from \"./api\"\nimport { useAddConfig, useDeleteConfig, useEditConfig } from \"./list-config\"\nimport { queryKey } from \"./react-query\"\nimport { useHttp } from \"./request\"\n\nexport interface ITask {\n    id: number;\n    name: string;\n    // 经办人\n    processorId: number;\n    projectId: number;\n    // 任务组\n    epicId: number;\n    kanbanId: number;\n    // bug or task\n    typeId: number;\n    note: string;\n}\n/**\n * 获取tasks\n */\n export function useTasks() {\n    const http = useHttp()\n    const key = useTasksKey()\n    const data = key[1] as any\n    async function getTasks() {\n        const res = await http(API.tasks, {data})\n        return res\n    }\n    return useQuery<ITask[]>(key, getTasks)\n}\n/**\n * 添加task\n */\nexport function useAddTask() {\n    const http = useHttp()\n    const key = useTasksKey()\n    async function  addTask(params: Partial<ITask>) {\n        return await http(API.tasks, {\n            method: \"POST\",\n            data: params\n        })\n    }\n    return useMutation(addTask, useAddConfig(key))\n}\n/**\n * 编辑 task\n */\nexport function useEditTask() {\n    const http = useHttp()\n    const key = useTasksKey()\n    \n    async function editTask(params: Partial<ITask>) {\n        const res = await http(`${API.tasks}/${params.id}`, {\n            method: \"PATCH\",\n            data: params\n        })\n        return res\n    }\n    return useMutation(editTask, useEditConfig(key))\n}\n/**\n * 删除 task\n */\nexport function  useDeleteTask() {\n    const http = useHttp()\n    const key = useTasksKey()\n    async function deleteTask(params: Partial<ITask>) {\n        return await http(`${API.tasks}/${params.id}`, {\n            method: \"DELETE\"\n        })\n    }\n    return useMutation(deleteTask, useDeleteConfig(key))\n}\n/**\n * 获取tasks types\n */\nexport function  useTaskTypes() {\n    const http = useHttp()\n    async function getTaskTypes() {\n        return await http(API.taskTypes)\n    }\n    return useQuery([queryKey.taskTypes], getTaskTypes)\n}","import { useProject } from \"tools/project\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { queryKey } from \"tools/react-query\";\nimport { useHttp } from \"tools/request\";\nimport { API, ISort } from \"tools/api\";\nimport { IKanban } from \"tools/kanban\";\nimport { useAddConfig, useDeleteConfig } from \"tools/list-config\";\nimport { moveIitem, useProjectIdInUrl } from \"./utils\";\n/**\n * \n */\nexport function useKanbansKey() {\n    const projectId = useProjectIdInUrl()\n    return [queryKey.kanbans, {projectId: projectId}]\n}\n/**\n * 获取projectInfo\n */\nexport function useProjectInUrl() {\n    const projectId = useProjectIdInUrl()\n    return useProject(projectId)\n}\n/**\n * 获取看板列表\n */\nexport function useKanbans() {\n    const http = useHttp()\n    const key = useKanbansKey()\n    const data = key[1] as object\n    function getKanbans() {\n        return http(API.kanbans, {data})\n    }\n    return useQuery<IKanban[]>(key, getKanbans)\n}\n/**\n * 添加看板\n */\nexport function useAddKanban() {\n    const http = useHttp()\n    const kanbansKey = useKanbansKey()\n    function addKanban(param: Partial<IKanban>) {\n        return http(API.kanbans, {\n            method: 'POST',\n            data: param,\n        })\n    }\n    return useMutation(addKanban, useAddConfig(kanbansKey))\n}\n/**\n * 删除看板\n */\nexport function useDeleteKanban() {\n    const http = useHttp()\n    const kanbansKey = useKanbansKey()\n    function deleteKanban(param: Partial<IKanban>) {\n        return http(`${API.kanbans}/${param.id}`, {\n            method: \"DELETE\"\n        })\n    }\n    return useMutation(deleteKanban, useDeleteConfig(kanbansKey))\n}\n/**\n * 排序看板\n */\nexport function useReorderKanban() {\n    const http = useHttp()\n    const kanbansKey = useKanbansKey()\n    const queryClient = useQueryClient()\n    async function reorderKanban(params:ISort) {\n        const res = await http(API.kanbansReorder, {\n            data: params,\n            method: \"POST\"\n        })\n        return res\n    }\n    return useMutation(reorderKanban, {\n        onMutate(params: ISort) {\n            const preKanbans = queryClient.getQueryData(kanbansKey) as IKanban[]\n            const newKanbans = sortKanban(preKanbans, params)\n            queryClient.setQueryData(kanbansKey, newKanbans)\n            return preKanbans\n        },\n        // onSuccess() {\n        //     queryClient.invalidateQueries(kanbansKey)\n        // },\n        onError(err: Error, param: any, preDate: any) {\n            queryClient.setQueryData(kanbansKey, preDate)\n        }\n    })\n}\n/**\n * 重新排序kanban\n */\nfunction sortKanban(kanbans: IKanban[], params: ISort) {\n    kanbans = [...kanbans]\n    const kanbanIds = kanbans.map(item => item.id)\n    const fromIndex = kanbanIds.indexOf(params.fromId)\n    const toIndex = kanbanIds.indexOf(params.referenceId)\n    return moveIitem(kanbans, fromIndex, toIndex, params.type)\n}\n","import { Button, Dropdown, Menu } from \"antd\";\nimport { FC } from \"react\";\nimport { IKanban } from \"tools/kanban\";\nimport { useDeleteProject } from \"tools/project\";\nimport { useDeleteKanban } from \"./utils-kanban\";\n\ninterface IXKanbanMore {\n    kanban: IKanban\n}\n\nconst XKanbanMore:FC<IXKanbanMore> = ({kanban}) => {\n\n    const { mutate } = useDeleteKanban()\n\n    function deleteKanban() {\n        mutate(kanban)\n    }\n\n    const MENU = <Menu>\n        <Menu.Item onClick={deleteKanban} >删除</Menu.Item>\n    </Menu>\n\n    return <Dropdown overlay={MENU} arrow >\n        <Button type=\"link\" >...</Button>\n    </Dropdown>\n}\n\nexport default XKanbanMore","import styled from \"@emotion/styled\";\nimport { Card, Input } from \"antd\";\nimport { FC, useState } from \"react\";\nimport { IKanban } from \"tools/kanban\";\nimport { useAddTask } from \"tools/task\";\nimport { useProjectIdInUrl } from \"./utils\";\n\ninterface IXAddTask {\n    kanban: IKanban\n}\n\nconst XAddTask:FC<IXAddTask> = ({kanban}) => {\n\n    const [inputShow, setInputShow] = useState(false)\n    const [name, setName] = useState(\"\")\n    const projectId = useProjectIdInUrl()\n    const { mutateAsync: addTask } = useAddTask()\n\n    function add() {\n        addTask({\n            name, \n            projectId,\n            kanbanId: kanban.id\n        })\n        setName(\"\")\n    }\n\n    return <Content>\n        {\n            !inputShow \n            ? <div className=\"add\" onClick={() => setInputShow(true)} >+添加task</div> \n            : <Card>\n                <Input \n                    placeholder=\"需要做点什么\" \n                    autoFocus={true}\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                    onBlur={() => setInputShow(false)}\n                    onPressEnter={add}\n                />\n            </Card>\n        }\n    </Content>\n}\n\nexport default XAddTask\n\nconst Content = styled.div`\n    .add {\n        padding-left: 1rem;\n    }\n`","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","import { FC } from \"react\";\n\ninterface IXHightLight {\n  txt: string;\n  keyword: string;\n}\n\nconst XHightLight: FC<IXHightLight> = ({ txt, keyword }) => {\n  \n  const arr = txt.split(keyword)\n  \n  if (!keyword) {\n    return <>{txt}</>;\n  }\n\n  return (\n    <>\n      {arr.map((item, index) => (\n        <span key={index}>\n          {item}\n          {index !== arr.length - 1 && (\n            <span style={{ color: \"#257AFD\" }}>{keyword}</span>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n\nexport default XHightLight;\n","import styled from \"@emotion/styled\";\nimport { FC, useMemo } from \"react\";\nimport { ITask } from \"tools/task\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\nimport { Card } from \"antd\";\nimport AlertModel from \"tools/alert\";\nimport XHightLight from \"components/hight-light\";\nimport { useTasksParam } from \"./utils-task\";\n\ninterface IXTaskCard {\n    task: ITask\n}\n\nconst XTaskCard:FC<IXTaskCard> = ({ task }) => {\n\n    const {params} = useTasksParam()\n\n    const icon = useMemo(() => {\n        if(task?.typeId === 2) return bugIcon\n        return taskIcon\n    }, [task])\n\n    return <Content onClick={() => AlertModel.taskForm(task)} >\n        <h3>\n            <XHightLight txt={task.name} keyword={params.name} />\n        </h3>\n        <img src={icon} alt=\"icon\" />\n    </Content>\n}\n\nexport default XTaskCard\n\nconst Content = styled(Card)`\n    margin-bottom: 1rem;\n`","import styled from \"@emotion/styled\";\nimport React, { FC, ReactNode } from \"react\";\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\n\nconst Content = styled.div<{\n  isDraggingOver: boolean,\n  bg: string,\n  hoverBg: string,\n}>`\n  background-color: ${(props) => (props.isDraggingOver ? props.hoverBg : props.bg)};\n`;\n\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\n  children: ReactNode;\n  className?: string;\n  bg?: string;\n  hoverBg?: string;\n}\n\nconst XDrop: FC<IXDrop> = ({ children, className, bg, hoverBg, ...props }) => {\n  return (\n    <Droppable {...props}>\n      {(provided, snapshot) => (\n        <Content\n          {...provided.innerRef}\n          ref={provided.innerRef}\n          className={className}\n          isDraggingOver={snapshot.isDraggingOver}\n          bg={bg || \"#fff\"}\n          hoverBg={hoverBg || \"#f7f7f7\"}\n        >\n          {children}\n          {provided.placeholder}\n        </Content>\n      )}\n    </Droppable>\n  );\n};\n\nexport default XDrop;\n","import React, { FC, ReactNode } from \"react\";\nimport { Draggable, DraggableProps } from \"react-beautiful-dnd\";\n\ninterface IXDrag extends Omit<DraggableProps, \"children\"> {\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n}\n\nconst XDrag: FC<IXDrag> = ({ className, children, dragAll, ...props }) => {\n  if (!React.isValidElement(children)) return <div />;\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        const dragHandleProps = dragAll ? provided.dragHandleProps : {};\n        return (\n          <div\n            className={className}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...dragHandleProps} // 加上这个属性就可以被drag\n          >\n            {React.cloneElement(children, { provided })}\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nXDrag.defaultProps = {\n  dragAll: true\n};\n\nexport default XDrag;\n","import styled from \"@emotion/styled\";\nimport { XRow } from \"components/row\";\nimport { FC } from \"react\";\nimport { IKanban } from \"tools/kanban\";\nimport { useTasks } from \"tools/task\";\nimport XKanbanMore from \"./kanban-more\";\nimport XAddTask from \"./task-add\";\nimport XTaskCard from \"./task-card\";\nimport { DraggableProvided } from \"react-beautiful-dnd\";\nimport XDrop from \"components/drop\";\nimport XDrag from \"components/drag\";\n\ninterface IXKanbanColumn {\n    kanban: IKanban\n    provided?: DraggableProvided;\n}\n\nconst XKanbanColumn:FC<IXKanbanColumn> = ({kanban, provided}) => {\n\n    const { data: tasks } = useTasks()\n    const filterTasks = tasks?.filter(task => task.kanbanId === kanban.id)\n\n    return <Content>\n        <XRow between={true} {...provided?.dragHandleProps} >\n            <h3>{kanban.name}</h3>\n            <XKanbanMore kanban={kanban} />\n        </XRow>\n        <div className=\"drop-content\" >\n            <XDrop droppableId={String(kanban.id)} type=\"task\" direction=\"vertical\" className='task-drop' bg=\"#f7f7f7\" >\n                {\n                    filterTasks?.map((task, index) => <XDrag draggableId={String(task.id)} index={index} key={task.id} >\n                        <XTaskCard task={task} />\n                    </XDrag>)\n                }\n            </XDrop>\n            {/* {\n                filterTasks?.map((task, index) => <XTaskCard task={task} key={index} />)\n            } */}\n            <XAddTask kanban={kanban} />\n        </div>\n    </Content>\n}\n\nexport default XKanbanColumn\n\nexport const Content = styled.div`\n    background-color: #f7f7f7;\n    min-width: 27rem;\n    height: 100%;\n    border-radius: 6px;\n    display: flex;\n    flex-direction: column;\n    padding: 0.7rem;\n    overflow: auto;\n    margin-right: 1rem;\n    .drop-content {\n        .task-drop {\n            min-height: 1rem;\n            .task-card {\n                margin-bottom: .5rem;\n            }\n        }\n    }\n`","import { Content } from \"./kanban-column\";\nimport { FC, useState } from \"react\";\nimport { Input } from \"antd\";\nimport { useAddKanban } from \"./utils-kanban\";\nimport { useProjectIdInUrl } from \"./utils\";\n\ninterface IXKanbanAdd {\n\n}\n\nconst XKanbanAdd:FC<IXKanbanAdd> = () => {\n\n    const [name, setName] = useState(\"\")\n    const projectId = useProjectIdInUrl()\n    const { mutateAsync: addKanban } = useAddKanban()\n    async function submit() {\n        await addKanban({name, projectId})\n        setName(\"\")\n    }\n\n    return <Content>\n        <Input \n            size=\"large\" \n            placeholder=\"新建看板名称\" \n            value={name}\n            onChange={e => setName(e.target.value)}\n            onPressEnter={submit}\n        />\n    </Content>\n}\n\nexport default XKanbanAdd","import styled from \"@emotion/styled\";\nimport { Select } from \"antd\";\nimport { FC, useMemo } from \"react\";\nimport { useTaskTypes } from \"tools/task\";\nimport { useUsers } from \"tools/user\";\nimport { useSelect } from \"./use-select\";\n\ninterface IXTaskTypeSelect extends React.ComponentProps<typeof Select> {\n    \n}\n\nconst XTaskTypeSelect:FC<IXTaskTypeSelect> = (props) => {\n    const {data: taskTypes} = useTaskTypes()\n\n    const {options, defaultValue} = useSelect(taskTypes, \"类型\")\n\n    return <Content \n        {...props}\n        value={props.value || defaultValue}\n        options={options} \n    />\n}\n\nexport default XTaskTypeSelect\n\nconst Content = styled(Select)`\n    .ant-select-selection-item {\n        text-align: left;\n    }\n`","import styled from \"@emotion/styled\";\nimport { Button, Input } from \"antd\";\nimport { XRow } from \"components/row\";\nimport XTaskTypeSelect from \"components/select/task-type-select\";\nimport XUserSelect from \"components/select/user-select\";\nimport { FC } from \"react\";\nimport { useTasksParam } from \"./utils-task\";\n\ninterface IXSearchTask {\n\n}\n\nconst XSearchTask:FC<IXSearchTask> = () => {\n\n    const { params, setParams, reset } = useTasksParam()\n\n    const onChange = (name: string) => {\n        setParams({name})\n    }\n    \n    return <Content gap={1} marginBottom={2} >\n        <Input \n            className=\"input\" \n            value={params.name}\n            onChange={e => onChange(e.target.value)}\n        />\n        <XUserSelect \n            value={params.processorId}\n            onChange={v => setParams({processorId: v})}\n        />\n        <XTaskTypeSelect \n            value={params.typeId}\n            onChange={v => setParams({typeId: v})}\n        />\n        <Button onClick={reset}>清除筛选器</Button>\n    </Content>\n}\n\nexport default XSearchTask\n\nconst Content = styled(XRow)`\n    .input {\n        width: 20rem;\n    }\n`","import styled from \"@emotion/styled\";\nimport XLoading from \"components/loading\";\nimport { FC } from \"react\";\nimport { IKanban } from \"tools/kanban\";\nimport { useTasks } from \"tools/task\";\nimport XKanbanAdd from \"./kanban-add\";\nimport XKanbanColumn from \"./kanban-column\";\nimport XSearchTask from \"./search-task\";\nimport { useKanbans, useProjectInUrl, useReorderKanban } from \"./utils-kanban\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport XDrop from \"components/drop\";\nimport XDrag from \"components/drag\";\nimport { getTypeTask, useReorderTask } from \"./utils-task\";\n\nconst XKanban:FC = () => {\n\n    const { data: project, isLoading: projectLoading } = useProjectInUrl()\n    const { data: tasks, isLoading: taskLoading} = useTasks()\n    const loading = projectLoading || taskLoading\n    const { data: kanbans } = useKanbans()\n    const { mutateAsync: reorderKanban } = useReorderKanban()\n    const { mutateAsync: reorderTask } = useReorderTask()\n    /**\n     * \n     * source: 起点\n     * destination: 终点 \n     * draggableId: 被拖拽item id\n     */\n    function onDragEnd(e: DropResult) {\n        const { source, destination, draggableId, type } = e\n        if(!kanbans || !destination || !tasks) return\n        if(type === \"column\") {\n            const from: IKanban = kanbans[source.index]\n            const reference: IKanban = kanbans[destination.index]\n            reorderKanban({\n                fromId: from.id,\n                referenceId: reference.id,\n                type: source.index < destination.index ? \"after\" : \"before\"\n            })\n        }\n        if(type === \"task\") {\n            const filterTasks = tasks.filter(task => task.kanbanId === Number(destination.droppableId))\n            const reference = filterTasks[destination.index] || filterTasks[destination.index-1]\n            const type = getTypeTask({\n                arr: filterTasks,\n                fromIndex: source.index,\n                fromKanbanId: Number(source.droppableId),\n                toIndex: destination.index,\n                toKanbanId: Number(destination.droppableId),\n            })\n            reorderTask({\n                fromKanbanId: Number(source.droppableId),\n                fromId: Number(draggableId),\n                toKanbanId: Number(destination.droppableId),\n                referenceId: reference?.id,\n                type\n            })\n        }\n    }\n\n    return <Content>\n        <h1 className=\"title\">{project?.name}看板</h1>\n        <XSearchTask />\n        {\n            loading \n            ? <XLoading className=\"loading\" /> \n            : <DragDropContext  onDragEnd={onDragEnd} >\n                <div className=\"column-content\" >\n                    <XDrop \n                        className=\"kanbans\" \n                        droppableId=\"columns-drop\"\n                        type=\"column\"\n                        direction=\"horizontal\"\n                        hoverBg=\"#fff\"\n                    >\n                        {kanbans?.map((kanban, index) => (\n                            <XDrag draggableId={`kanban-${kanban.id}`} index={index} dragAll={false} key={kanban.id} >\n                                <XKanbanColumn key={kanban.id} kanban={kanban} />\n                            </XDrag>\n                        ))}\n                    </XDrop>\n                    <XKanbanAdd />\n                </div>\n            </DragDropContext>\n        }\n    </Content>\n}\n\nexport default XKanban\n\nconst Content = styled.div`\n    padding: 2rem;\n    .title {\n        margin-bottom: 1rem;\n    }\n    .loading {\n        width: 100%;\n        height: calc(100vw - 6rem);\n    }\n    .column-content {\n        height: calc(100vh - 20rem);\n        display: flex;\n        overflow: scroll;\n        .kanbans {\n            display: flex;\n        }\n    }\n`","import styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction useRouteKey() {\n    const arr = useLocation().pathname.split(\"/\")\n    return arr[arr.length-1]\n}\n\nconst XMenu:FC = () => {\n\n    const key = useRouteKey()\n\n    return <Content mode=\"inline\" selectedKeys={[key]} >\n        <Menu.Item key=\"kanban\" >\n            <Link to=\"kanban\" >看板</Link>\n        </Menu.Item>\n        <Menu.Item key=\"epic\">\n            <Link to=\"epic\" >任务组</Link>\n        </Menu.Item>\n    </Content>\n}\n\nexport default XMenu\n\nconst Content = styled(Menu)`\n    height: 100%;\n    .ant-menu-item {\n        margin-top: 0;\n    }\n`","import styled from \"@emotion/styled\";\nimport { Layout } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport XEpic from \"pages/epic\";\nimport XKanban from \"pages/kanban\";\nimport React, { FC } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport XMenu from \"./menu\";\n\nconst { Sider, Content } = Layout\n\nconst XTaskRouter:FC = () => {\n\n    useTitle(\"项目管理\")\n    \n    return <XLayout>\n        <Sider theme=\"light\" >\n            <XMenu/>\n        </Sider>\n\n        <Content className=\"content\">\n            <Routes>\n                <Route path='/kanban' element={<XKanban/>} />\n                <Route path='/epic' element={<XEpic/>} />\n                <Navigate to={window.location.pathname+'/kanban'} replace={true} />\n            </Routes>\n        </Content>\n    </XLayout>\n}\n\nexport default XTaskRouter\n\nconst XLayout = styled(Layout)`\n    height: calc(100vh - 6rem);\n    .content {\n        background-color: #fff;\n        overflow: hidden;\n    }\n`","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"98.0308675%\",\n  y1: \"0.160599572%\",\n  x2: \"58.8877062%\",\n  y2: \"40.7655246%\",\n  id: \"uid5\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"18%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"none\",\n  strokeWidth: 1,\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.9366667,4 L11.41,4 C11.41,5.3800098 11.9582068,6.703498 12.934021,7.67931228 C13.9098353,8.65512657 15.2333235,9.20333333 16.6133333,9.20333333 L18.7366667,9.20333333 L18.7366667,11.2533333 C18.7385054,14.1244521 21.0655479,16.4514946 23.9366667,16.4533333 L23.9366667,5 C23.9366667,4.44771525 23.4889514,4 22.9366667,4 Z\",\n  fill: \"currentColor\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.2333333,9.74333333 L5.70666667,9.74333333 C5.70850536,12.6144521 8.03554792,14.9414946 10.9066667,14.9433333 L13.03,14.9433333 L13.03,17 C13.0336786,19.8711178 15.3622132,22.196669 18.2333333,22.1966667 L18.2333333,10.7433333 C18.2333333,10.1910486 17.7856181,9.74333333 17.2333333,9.74333333 Z\",\n  fill: \"url(#uid5)\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.5266667,15.4833333 L0,15.4833333 C3.51929402e-16,18.357055 2.32961169,20.6866667 5.20333333,20.6866667 L7.33333333,20.6866667 L7.33333333,22.7366667 C7.33516565,25.6051863 9.65815176,27.9311544 12.5266667,27.9366667 L12.5266667,16.4833333 C12.5266667,15.9310486 12.0789514,15.4833333 11.5266667,15.4833333 Z\",\n  fill: \"url(#uid5)\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M37.07,18.956 C37.07,20.646 36.394,21.842 34.418,21.842 C33.56,21.842 32.702,21.686 32,21.4 L32,23.662 C32.65,23.896 33.586,24.104 34.808,24.104 C38.032,24.104 39.41,21.946 39.41,18.8 L39.41,6.918 L37.07,6.918 L37.07,18.956 Z M42.894,7.568 C42.894,8.556 43.544,9.128 44.454,9.128 C45.364,9.128 46.014,8.556 46.014,7.568 C46.014,6.58 45.364,6.008 44.454,6.008 C43.544,6.008 42.894,6.58 42.894,7.568 Z M43.31,24 L45.546,24 L45.546,11 L43.31,11 L43.31,24 Z M48.926,24 L51.11,24 L51.11,16.33 C51.11,13.574 52.852,12.716 55.712,13.002 L55.712,10.818 C53.164,10.662 51.864,11.754 51.11,13.288 L51.11,11 L48.926,11 L48.926,24 Z M66.45,24 L66.45,21.66 C65.618,23.376 64.058,24.26 62.056,24.26 C58.598,24.26 56.856,21.322 56.856,17.5 C56.856,13.834 58.676,10.74 62.316,10.74 C64.214,10.74 65.67,11.598 66.45,13.288 L66.45,11 L68.686,11 L68.686,24 L66.45,24 Z M59.092,17.5 C59.092,20.62 60.34,22.18 62.654,22.18 C64.656,22.18 66.45,20.906 66.45,18.02 L66.45,16.98 C66.45,14.094 64.812,12.82 62.914,12.82 C60.392,12.82 59.092,14.484 59.092,17.5 Z\",\n  fillRule: \"evenodd\",\n  fill: \"inherit\"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 69 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"@emotion/styled\";\nimport { Popover, Typography, List } from \"antd\";\nimport { FC } from \"react\";\nimport { useUsers } from \"tools/user\";\n\nconst XHeadUsers:FC = () => {\n\n    const { data: users, refetch } = useUsers()\n\n    const CONTEENT = <Content>\n        <Typography.Text type=\"secondary\" >组员列表</Typography.Text>\n        <List>\n            {users?.map(user => <List.Item key={user.id} >{user.name}</List.Item>)}\n        </List>\n    </Content>\n\n    return <Popover content={CONTEENT} onVisibleChange={() => refetch()} >\n        <span>成员</span>\n    </Popover>\n}\n\nexport default XHeadUsers\n\nconst Content = styled.div`\n    min-width: 15rem;\n`","import styled from \"@emotion/styled\";\nimport { Typography, List, Divider, Button, Popover } from \"antd\";\nimport React, { FC } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport { useProjects } from \"tools/project\";\n\nconst XHeadProject:FC = () => {\n\n    const { data: projects, refetch } = useProjects()\n    const saves = projects?.filter(project => project.pin)\n\n    const CONTENT = <Content>\n        <Typography.Text type=\"secondary\" >收藏项目</Typography.Text>\n        <List>\n            {saves?.map(project => <List.Item key={project.id} >{project.name}</List.Item>)}\n        </List>\n        <Divider />\n        <Button type=\"text\" onClick={() => AlertModel.projectForm()} >+创建项目</Button>\n    </Content>\n\n    return <Popover content={CONTENT} onVisibleChange={() => refetch()} >\n        <span>项目</span>\n    </Popover>\n}\n\nexport default XHeadProject\n\nconst Content = styled.div`\n    min-width: 15rem;\n`","import styled from \"@emotion/styled\"\nimport { FC } from \"react\"\nimport {ReactComponent as Logo} from \"assets/logo.svg\"\nimport { Dropdown, Menu } from \"antd\"\nimport { logout, useUser, useUsers } from \"tools/user\"\nimport XHeadUsers from \"./head-users\"\nimport XHeadProject from \"./head-projects\"\n\nconst XHeader:FC = () => {\n\n    const {data: userInfo} = useUser()\n    const {data: users} = useUsers()\n\n    function toHome() {\n        window.location.pathname = \"\"\n    }\n\n    const UserMenu = <Menu style={{textAlign: \"center\"}} >\n        <Menu.Item key=\"logout\" onClick={logout} >登出</Menu.Item>\n    </Menu>\n\n    return <Content>\n        <div onClick={toHome} ><Logo/></div>\n        <XHeadProject />\n        <XHeadUsers />\n        <div></div>\n        <Dropdown overlay={UserMenu} placement=\"bottomCenter\" arrow >\n            <span>Hi, {userInfo?.name}</span>\n        </Dropdown>\n    </Content>\n}\n\nexport default XHeader\n\nconst Content = styled.div`\n    padding: 0 3.5rem;\n    height: 6rem;\n    background-color: #fff;\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: 8rem 100px 100px 1fr 100px;\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1) inset;\n    > * {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`","import styled from \"@emotion/styled\";\nimport XKanban from \"pages/kanban\";\nimport XProjects from \"pages/projects\";\nimport { FC } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport XTaskRouter from \"router/tasks-router\";\nimport XHeader from \"./header\";\n\nconst XProjectsRouter: FC = () => {\n    return <Content>\n        <XHeader />\n        <Routes>\n            <Route path=\"/projects\" element={<XProjects />} />\n            <Route path=\"/projects/:id/*\" element={<XTaskRouter />} />\n            <Navigate to=\"/projects\" replace={true} />\n        </Routes>\n    </Content>\n}\n\nexport default XProjectsRouter\n\nconst Content = styled.div`\n\n`","import styled from \"@emotion/styled\";\nimport { Input, Form, Button, Divider } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport React, { FC } from \"react\";\nimport { useLogin } from \"tools/user\";\n\ninterface IXLogin {\n    onError: (err: Error) => void\n}\n\ninterface ILoginForm {\n    username: string;\n    password: string;\n}\n\nconst XLogin:FC<IXLogin> = ({onError}) => {\n\n    useTitle(\"登录\")\n    const {mutateAsync: login, isLoading} = useLogin()\n\n    const onFinish = (data: ILoginForm) => {\n        login(data).catch(err => onError(err))\n    }\n\n    return <Content>\n        <Form onFinish={onFinish} >\n            <Form.Item name=\"username\" rules={[{required: true, message: '请输入用户名'}]} >\n                <Input placeholder=\"用户名\" />\n            </Form.Item>\n\n            <Form.Item name=\"password\" rules={[{required: true, message: '请输入密码'}]} >\n                <Input.Password placeholder=\"密码\" />\n            </Form.Item>\n\n            <Form.Item>\n                <Button className=\"btn\" type=\"primary\" htmlType=\"submit\" loading={isLoading} >登录</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XLogin\n\nconst Content = styled.div`\n    .btn {\n        width: 100%;\n    }\n`","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import styled from \"@emotion/styled\";\nimport { Input, Form, Button } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport React, { FC } from \"react\";\nimport { useRegist } from \"tools/user\";\n\ninterface IRegistForm {\n    username: string;\n    password: string;\n    cpassword: string;\n}\n\ninterface IXRegist {\n    onError: (err: Error) => void\n}\n\nconst XRegist:FC<IXRegist> = ({onError}) => {\n\n    useTitle(\"注册\")\n    const {mutateAsync: regist, isLoading} = useRegist()\n\n    const onFinish = ({cpassword, ...data}: IRegistForm) => {\n        if(data.password !== cpassword) {\n            const err = new Error('请确保两次密码相同')\n            onError(err)\n            return\n        }\n        regist(data).catch(error => onError(error))\n    }\n\n    return <Content>\n        <Form onFinish={onFinish} >\n            <Form.Item name=\"username\" rules={[{required: true, message: '请输入用户名'}]} >\n                <Input placeholder=\"用户名\" />\n            </Form.Item>\n\n            <Form.Item name=\"password\" rules={[{required: true, message: '请输入密码'}]} >\n                <Input.Password placeholder=\"密码\" />\n            </Form.Item>\n\n            <Form.Item name='cpassword' rules={[{required: true, message: '请再次输入密码'}]} >\n                <Input.Password placeholder='确认密码' type='text' />\n            </Form.Item>\n\n            <Form.Item>\n                <Button className=\"btn\" type=\"primary\" htmlType=\"submit\" loading={isLoading} >注册</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XRegist\n\nconst Content = styled.div`\n    .btn {\n        width: 100%;\n    }\n`","import styled from \"@emotion/styled\";\nimport { Card, Divider, Typography } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport XLogin from \"./login\";\nimport logo from \"assets/logo.svg\"\nimport left from \"assets/left.svg\"\nimport right from \"assets/right.svg\"\nimport XRegist from \"./regist\";\n\nconst PUnlogin:FC = () => {\n    const [isRegist, setIsRegist] = useState(false)\n    const [error, setError] = useState<Error>()\n\n    const footerInfo = useMemo(() => {\n        return isRegist ? \"已经有账号了?直接登录\" : \"没有账号?注册新账号\"\n    }, [isRegist])\n\n    const title = useMemo(() => {\n        return isRegist ? \"注册\" : \"登录\"\n    }, [isRegist])\n\n    return <Content>\n        <div className=\"header\" />\n        <div className=\"bg\" />\n        <Card className='card' >\n            {\n                <h2 className=\"title\" >{title}</h2>\n            }{\n                error &&\n                <Typography.Text type=\"danger\" >{error.message}</Typography.Text>\n            }{\n                isRegist\n                ? <XRegist onError={setError} />\n                : <XLogin onError={setError} />\n            }\n            <Divider />\n            <a onClick={() => setIsRegist(!isRegist)} >\n                {footerInfo}\n            </a>\n        </Card>\n    </Content>\n}\nexport default PUnlogin\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100vh;\n    .header {\n        background: url(${logo}) no-repeat center;\n        padding: 5rem 0;\n        background-size: 8rem;\n        width: 100%;\n    }\n    .card {\n        width: 40rem;\n        min-height: 56rem;\n        padding: 3.2rem 4rem;\n        border-radius: 0.3rem;\n        box-sizing: border-box;\n        box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n        text-align: center;\n    }\n    .bg {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        background-attachment: fixed;\n        background-repeat: no-repeat;\n        background-image: url(${left}), url(${right});\n        background-position: left bottom, right bottom;\n        background-size: calc((100vw/2) - 21rem);\n    }\n    .title {\n        margin-bottom: 2.4rem;\n        color: rgb(94, 108, 132);\n    }\n`","import XLoading from 'components/loading';\nimport XProjectsRouter from 'router/projects-router';\nimport { useUser } from 'tools/user';\nimport XUnLogin from './pages/login'\n\nfunction App() {\n\n  const {data: userInfo, isLoading} = useUser()\n\n  return (\n    <div className=\"App\">\n      {\n        userInfo \n        ? <XProjectsRouter />\n        : isLoading\n        ? <XLoading />\n        : <XUnLogin />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"@emotion/styled\";\nimport { Button, Drawer, Form, Input } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport XUserSelect from \"components/select/user-select\";\nimport React, { FC, useState } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport { IProject, useAddProject, useEditProject } from \"tools/project\";\n\nconst XProjectForm:FC  = () => {\n\n    const [ form ] = useForm()\n    const [ visible, setVisible ] = useState(false)\n    const [param, setParam] = useState<Partial<IProject>>()\n    const mutate = param ? useEditProject : useAddProject\n    const { mutateAsync, isLoading } = mutate()\n\n    AlertModel.projectForm = async (param?: Partial<IProject>) => {\n        setVisible(!visible)\n        if(!param?.id) return\n        setParam(param)\n        form.setFieldsValue(param)\n    }\n\n    function onFinish(data: any) {\n        mutateAsync({...param, ...data}).then(() => close())\n    }\n\n    function close() {\n        setVisible(false)\n        form.resetFields()\n    }\n\n    return <Content visible={visible} onClose={close} width=\"100vw\" >\n        <Form layout=\"vertical\" className=\"form\" onFinish={onFinish} form={form} >\n            {\n\n            }\n            <h2 className=\"title\" >创建项目</h2>\n\n            <Form.Item label=\"名称\" name=\"name\" rules={[{required: true, message: \"输入项目名称\"}]} >\n                <Input placeholder=\"输入项目名称\" />\n            </Form.Item>\n\n            <Form.Item label=\"部门\" name=\"organization\" rules={[{required: true, message: \"输入部门名称\"}]} >\n                <Input placeholder=\"输入部门名称\" />\n            </Form.Item>\n\n            <Form.Item label=\"负责人\" name=\"personId\" >\n                <XUserSelect />\n            </Form.Item>\n\n            <Form.Item className=\"submit\" >\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} >提交</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XProjectForm\n\nconst Content = styled(Drawer)`\n    .ant-drawer-body {\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n        padding: 32px;\n        padding-top: 200px;\n        .form {\n            width: 50vw;\n            text-align: center;\n            .submit {\n                text-align: right;\n            }\n        }\n    }\n`","import styled from \"@emotion/styled\";\nimport { Button, Modal, Form, Input } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport XTaskTypeSelect from \"components/select/task-type-select\";\nimport XUserSelect from \"components/select/user-select\";\nimport React, { FC, useState } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport { ITask, useDeleteTask, useEditTask } from \"tools/task\";\n\nconst layout = {\n    labelCol: {span: 8},\n    wrapperCol: {span: 16}\n}\n\nconst XTaskForm:FC  = () => {\n\n    const [ form ] = useForm()\n    const [ visible, setVisible ] = useState(false)\n    const [param, setParam] = useState<Partial<ITask>>()\n    const { mutateAsync: editTask, isLoading: editLoading } = useEditTask()\n    const { mutateAsync: deleteTask, isLoading: deleteLoading } = useDeleteTask()\n\n    AlertModel.taskForm = async (param?: Partial<ITask>) => {\n        setVisible(!visible)\n        if(!param?.id) return\n        setParam(param)\n        form.setFieldsValue(param)\n    }\n\n    function onFinish() {\n        const data = form.getFieldsValue()\n        editTask({...param, ...data}).then(() => close())\n    }\n\n    function close() {\n        form.resetFields()\n        setVisible(false)\n    }\n\n    async function delTask() {\n        if(param) {\n            await deleteTask(param)\n        }\n        close()\n    }\n\n    return <Content  \n        title=\"编辑任务\"\n        okText=\"确认\"\n        cancelText=\"取消\"\n        confirmLoading={editLoading}\n        visible={visible}\n        onOk={onFinish}\n        onCancel={close}\n    >\n        <Form className=\"form\" {...layout} form={form} >\n            <Form.Item label=\"任务名\" name=\"name\" rules={[{required: true, message: \"请输入任务名\"}]} >\n                <Input placeholder=\"输入任务名\" />\n            </Form.Item>\n\n            <Form.Item label=\"经办人\" name=\"processorId\" >\n                <XUserSelect />\n            </Form.Item>\n\n            <Form.Item label=\"类型\" name=\"typeId\" >\n                <XTaskTypeSelect />\n            </Form.Item>\n            \n            <div className=\"btn-content\" >\n                <Button \n                    type=\"primary\" \n                    loading={deleteLoading} \n                    onClick={delTask}\n                    size=\"small\" >删除</Button>\n            </div>\n        </Form>\n    </Content>\n}\n\nexport default XTaskForm\n\nconst Content = styled(Modal)`\n    .btn-content {\n        text-align: right;\n    }\n`","import styled from \"@emotion/styled\";\nimport { Button, Drawer, Form, Input } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useProjectIdInUrl } from \"pages/kanban/utils\";\nimport React, { FC, useState } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport { IProject } from \"tools/project\";\nimport { useAddEpic } from \"./utils\";\n\nconst XEpicForm:FC  = () => {\n\n    const [ form ] = useForm()\n    const [ visible, setVisible ] = useState(false)\n    const { mutateAsync: addEpic, isLoading } = useAddEpic()\n    const projectId = useProjectIdInUrl()\n\n    AlertModel.epicForm = async (param?: Partial<IProject>) => {\n        setVisible(!visible)\n    }\n\n    function onFinish(data: any) {\n        addEpic({...data, projectId}).then(() => close())\n    }\n\n    function close() {\n        setVisible(false)\n        form.resetFields()\n    }\n\n    return <Content visible={visible} onClose={close} width=\"100vw\" >\n        <Form layout=\"vertical\" className=\"form\" onFinish={onFinish} form={form} >\n            <h2 className=\"title\" >创建任务</h2>\n\n            <Form.Item label=\"名称\" name=\"name\" rules={[{required: true, message: \"输入项目名称\"}]} >\n                <Input placeholder=\"输入项目名称\" />\n            </Form.Item>\n\n            <Form.Item className=\"submit\" >\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} >提交</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XEpicForm\n\nconst Content = styled(Drawer)`\n    .ant-drawer-body {\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n        padding: 32px;\n        padding-top: 200px;\n        .form {\n            width: 50vw;\n            text-align: center;\n            .submit {\n                text-align: right;\n            }\n        }\n    }\n`","import React, { FC } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DevTools, loadServer } from \"jira-dev-tool\";\nimport 'antd/dist/antd.less';\nimport './index.css';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter } from 'react-router-dom';\nimport XProjectForm from 'components/project-form';\nimport XTaskForm from 'components/task-form';\nimport XEpicForm from 'pages/epic/epic-form';\n\nconst Content: FC = ({children}) => {\n  return <QueryClientProvider client={new QueryClient()} >\n    <BrowserRouter>\n      {children}\n      <XProjectForm />\n      <XTaskForm />\n      <XEpicForm />\n    </BrowserRouter>\n  </QueryClientProvider>\n}\n\nloadServer(() =>\n  ReactDOM.render(\n    <Content>\n      <DevTools />\n      <App />\n    </Content>,\n    document.getElementById(\"root\")\n  )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}